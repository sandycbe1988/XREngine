client:
  config:
    publicRuntimeConfig:
      apiServer: https://api-dev.xrengine.info
      appServer: https://dev.xrengine.info
      gameserver: https://gameserver-dev.xrengine.info
      gameserverDomain: gameserver-dev.xrengine.info
      dev: true
      gaMeasurementId: '<GOOGLE_ANALYTICS_MEASUREMENT_ID>'
      feathersStoreKey: TheOverlay-Auth-Store
      localStorageKey: theoverlay-client-store-key-v1
      loginDisabled: true
      logo: "./logo.svg"
      rootRedirect: false
      siteDescription: Connected Worlds for Everyone
      siteTitle: XREngine
      title: "The Overlay"
      auth:
        enableSmsMagicLink: true
        enableEmailMagicLink: true
        enableUserPassword: true
        enableGithubSocial: true
        enableFacebookSocial: true
        enableGoogleSocial: true
        enableLinkedInSocial: true
        enableTwitterSocial: true
      alert:
        timeout: 10000
      offlineMode: false
      staticPages:
        termsOfService: "/terms-of-service"
  extraEnv:
    API_ASSETS_ROUTE: /static-resource
    API_ASSETS_ACTION: assets
    API_MEDIA_ROUTE: /media
    API_MEDIA_SEARCH_ROUTE: "-search"
    API_META_ROUTE: /meta
    API_PROJECTS_ROUTE: /project
    API_RESOLVE_MEDIA_ROUTE: /resolve-media
    API_PROJECT_PUBLISH_ACTION: /publish-project
    API_SCENES_ROUTE: /collection
    API_SERVER_ADDRESS: api-dev.xrengine.info
    API_SOCKET_ENDPOINT: /socket
    API_SERVER: https://api-dev.xrengine.info
    APP_ENV: production
    CLIENT_ADDRESS: https://dev.xrengine.info
    CLIENT_ENABLED: "true"
    CLIENT_SCENE_ROUTE: /scenes/
    CLIENT_LOCAL_SCENE_ROUTE: "/scene.html?scene_id="
    CORS_PROXY_SERVER: https://api-dev.xrengine.info
    HOST_IP: https://api-dev.xrengine.info
    HOST_PORT: "3000"
    GITHUB_ORG: xrengine
    GITHUB_REPO: spoke
    IS_MOZ: "false"
    NEXT_PUBLIC_API_SERVER: https://api-dev.xrengine.info
    NODE_ENV: production
    NON_CORS_PROXY_DOMAINS: "reticulum.io,xrengine.info,amazonaws.com"
    ROUTER_BASE_PATH: /spoke
    SERVER_ENABLED: "false"
    SITE_DESC: Connected Worlds for Everyone
    SITE_TITLE: TheOverlay
    THUMBNAIL_ROUTE: /thumbnail/
    THUMBNAIL_SERVER: https://api-dev.xrengine.info
    USE_DIRECT_UPLOAD_API: "true"
    USE_HTTPS: "true"
  image:
    repository: public.ecr.aws/t9b0o2y9/xrengine-dev
    pullPolicy: IfNotPresent
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-1
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - host: dev.xrengine.info
        paths:
          - /
  replicaCount: 1
  service:
    type: NodePort
domain: xrengine.info
mariadb:
  db:
    name: xredb
    password: adminadmin
    user: admin
  enabled: false
  externalHost: database-instance-1.cioqicfqsxtg.us-east-1.rds.amazonaws.com
rts:
  extraEnv:
    NAF_LISTEN_PORT: "8081"
api:
  config:
    aws:
      keys:
        access_key_id: AKIAXU7DD3PIVGEOX2QL
        secret_access_key: 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
      s3:
        region: us-east-1
        static_resource_bucket: xrengineinfo-static-resources
      cloudfront:
        domain: resources.xrengine.info
      sns:
        access_key_id: AKIAXU7DD3PIUPTDDMJH
        application_id: <AWS_SNS_APPLICATION_ID>
        region: us-east-1
        secret_access_key: dFxW4xKtW+mdQw8f0c+c6q3ssDfTivyBVnmUUgpm
        sender_id: <AWS_SNS_SENDER_ID>
    host: https://dev.xrengine.info/
  extraEnv:
    APP_ENV: production
    APP_HOST: dev.xrengine.info
    APP_URL: https://dev.xrengine.info
    AUTH_SECRET: <INSERT_A_UUID_OR_SOMETHING_SIMILAR>
    AWS_SMS_ACCESS_KEY_ID: AKIAXU7DD3PIUPTDDMJH
    AWS_SMS_REGION: us-east-1
    AWS_SMS_SECRET_ACCESS_KEY: AKIAXU7DD3PIUPTDDMJH
    AWS_SMS_TOPIC_ARN: XREngine
    CLIENT_ENABLED: "false"
    CERT: certs/cert.pem
    KEY: certs/key.pem
    FACEBOOK_CALLBACK_URL: https://dev.xrengine.info/auth/oauth/facebook
    FACEBOOK_CLIENT_ID: "<FB_OAUTH_CLIENT_ID>"
    FACEBOOK_CLIENT_SECRET: "<FB_OAUTH_SECRET>"
    FORCE_DB_REFRESH: "false"
    GAMESERVER_DOMAIN: gameserver-dev.xrengine.info
    GITHUB_CALLBACK_URL: https://dev.xrengine.info/auth/oauth/github
    GITHUB_CLIENT_ID: "<GITHUB_OAUTH_CLIENT_ID>"
    GITHUB_CLIENT_SECRET: "<GITHUB_OAUTH_SECRET>"
    GOOGLE_CALLBACK_URL: https://dev.xrengine.info/auth/oauth/google
    GOOGLE_CLIENT_ID: "<GOOGLE_OAUTH_CLIENT_ID>"
    GOOGLE_CLIENT_SECRET: "<GOOGLE_OAUTH_SECRET>"
    LINKEDIN_CALLBACK_URL: https://dev.theoverlay.io/auth/oauth/linkedin
    LINKEDIN_CLIENT_ID: "<LINKEDIN_OAUTH_CLIENT_ID"
    LINKEDIN_CIENT_SECRET: "<LINKEDIN_OAUTH_CLIENT_SECRET>"
    MAGICLINK_EMAIL_SUBJECT: Login to TheOverlay
    MAIL_FROM: info@login.xrengine.info
    SERVER_ENABLED: "true"
    SERVER_HOST: "api-dev.xrengine.info"
    SERVER_PORT: "3030"
    SMTP_FROM_EMAIL: info@login.xrengine.info
    SMTP_FROM_NAME: noreply
    SMTP_HOST: email-smtp.us-east-1.amazonaws.com
    SMTP_PASS: BAgIo4HsXUIFYYnOEW9Yly3uOg7rpZLdTUpp7/zFszXZ
    SMTP_PORT: "465"
    SMTP_SECURE: "true"
    SMTP_USER: AKIAXU7DD3PIWT3JDA5Z
    STORAGE_PROVIDER: aws
    STORAGE_AWS_ACCESS_KEY_ID: AKIAXU7DD3PIVGEOX2QL
    STORAGE_AWS_ACCESS_KEY_SECRET: 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
    STORAGE_CLOUDFRONT_DOMAIN: resources.xrengine.info
    STORAGE_CLOUDFRONT_DISTRIBUTION_ID: E2PNTMP91HI24O
    STORAGE_S3_REGION: us-east-1
    STORAGE_S3_STATIC_RESOURCE_BUCKET: xrengineinfo-static-resources
    STORAGE_S3_AVATAR_DIRECTORY: avatars
    TWITTER_CALLBACK_URL: https://dev.theoverlay.io/auth/oauth/linkedin
    TWITTER_CLIENT_ID: "<TWITTER_OAUTH_CLIENT_ID>"
    TWITTER_CIENT_SECRET: "<TWITTER_OAUTH_CLIENT_ID>"
    DEFAULT_AVATAR_ID: Allison
    AVATAR_FILE_ALLOWED_EXTENSIONS: ".glb,.gltf,.vrm,.fbx"
    MIN_AVATAR_FILE_SIZE: "0"
    MAX_AVATAR_FILE_SIZE: "15728640"
    MIN_THUMBNAIL_FILE_SIZE: "0"
    MAX_THUMBNAIL_FILE_SIZE: "2097152"
    STORAGE_S3_DEV_MODE: dev
    PRESIGNED_URL_EXPIRATION_DURATION: "3600"
  image:
    repository: public.ecr.aws/t9b0o2y9/xrengine-dev
  service:
    type: NodePort
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-1
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/enable-cors: "false"
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/affinity-mode: persistent
      nginx.ingress.kubernetes.io/server-snippet: |
        location ~* /cors-proxy/(.*) {
          proxy_http_version 1.1;
          proxy_pass_request_headers on;
          proxy_hide_header Access-Control-Allow-Origin;
          add_header Access-Control-Allow-Origin $http_origin;
          proxy_intercept_errors on;
          error_page 301 302 307 = @handle_redirects;
          proxy_pass https://$1?$args;
        }

        location @handle_redirects {
          set $saved_redirect_location '$upstream_http_location';
          proxy_pass_request_headers on;
          proxy_hide_header Access-Control-Allow-Origin;
          add_header Access-Control-Allow-Origin "$http_origin";
          proxy_pass $saved_redirect_location;
        }
    hosts:
      - host: api-dev.xrengine.info
        paths:
          - /
  replicaCount: 2

release:
  name: dev

media:
  enabled: false
  config:
    aws:
      keys:
        access_key_id: AKIAXU7DD3PI75EGH3HL
        secret_access_key: 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
      s3:
        region: us-east-1
        static_resource_bucket: xrengineinfo-static-resources
      cloudfront:
        domain: resources.xrengine.info
      sns:
        access_key_id: AKIAXU7DD3PIUPTDDMJH
        application_id: <AWS_SNS_APPLICATION_ID>
        region: us-east-1
        secret_access_key: dFxW4xKtW+mdQw8f0c+c6q3ssDfTivyBVnmUUgpm
        sender_id: <AWS_SNS_SENDER_ID>
    host: https://dev.xrengine.info/
  extraEnv:
    APP_ENV: production
    APP_HOST: dev.xrengine.info
    APP_URL: https://dev.xrengine.info
    AUTH_SECRET: <INSERT_A_UUID_OR_SOMETHING_SIMILAR>
    AWS_SMS_ACCESS_KEY_ID: AKIAXU7DD3PIUPTDDMJH
    AWS_SMS_REGION: us-east-1
    AWS_SMS_SECRET_ACCESS_KEY: AKIAXU7DD3PIUPTDDMJH
    AWS_SMS_TOPIC_ARN: XREngine
    FACEBOOK_CALLBACK_URL: https://dev.xrengine.info/auth/oauth/facebook
    FACEBOOK_CLIENT_ID: "<FB_OAUTH_CLIENT_ID>"
    FACEBOOK_CLIENT_SECRET: "<FB_OAUTH_SECRET>"
    FORCE_DB_REFRESH: "false"
    GITHUB_CALLBACK_URL: https://dev.xrengine.info/auth/oauth/github
    GITHUB_CLIENT_ID: "<GITHUB_OAUTH_CLIENT_ID>"
    GITHUB_CLIENT_SECRET: "<GITHUB_OAUTH_SECRET>"
    GOOGLE_CALLBACK_URL: https://dev.xrengine.info/auth/oauth/google
    GOOGLE_CLIENT_ID: "<GOOGLE_OAUTH_CLIENT_ID>"
    GOOGLE_CLIENT_SECRET: "<GOOGLE_OAUTH_SECRET>"
    MAGICLINK_EMAIL_SUBJECT: Login to TheOverlay
    MAIL_FROM: info@login.xrengine.info
    SERVER_ENABLED: "true"
    SERVER_HOST: "api-dev.xrengine.info"
    SMTP_FROM_EMAIL: info@login.xrengine.info
    SMTP_FROM_NAME: noreply
    SMTP_HOST: email-smtp.us-east-1.amazonaws.com
    SMTP_PASS: BAgIo4HsXUIFYYnOEW9Yly3uOg7rpZLdTUpp7/zFszXZ
    SMTP_PORT: "465"
    SMTP_SECURE: "true"
    SMTP_USER: AKIAXU7DD3PIWT3JDA5Z
    STORAGE_PROVIDER: aws
    STORAGE_AWS_ACCESS_KEY_ID: AKIAXU7DD3PIVGEOX2QL
    STORAGE_AWS_ACCESS_KEY_SECRET: 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
    STORAGE_CLOUDFRONT_DOMAIN: resources.xrengine.info
    STORAGE_CLOUDFRONT_DISTRIBUTION_ID: E2PNTMP91HI24O
    STORAGE_S3_REGION: us-east-1
    STORAGE_S3_STATIC_RESOURCE_BUCKET: xrengineinfo-static-resources
  image:
    repository: public.ecr.aws/t9b0o2y9/xrengine-dev
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-1
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: https://dev.xrengine.info
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
    hosts:
      - host: api-dev.xrengine.info
        paths:
          - /video
  service:
    type: NodePort

gameserver:
  image:
    repository: public.ecr.aws/t9b0o2y9/xrengine-dev
    pullPolicy: IfNotPresent
  extraEnv:
    APP_ENV: production
    APP_HOST: dev.xrengine.info
    AUTH_SECRET: <SAME_AUTH_SECRET_AS_IN_API>
    APP_URL: https://dev.xrengine.info
    GAMESERVER_ENABLED: "true"
    ROUTE53_ACCESS_KEY_ID: AKIAXU7DD3PIR7JNJCHE
    ROUTE53_ACCESS_KEY_SECRET: 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
    ROUTE53_HOSTED_ZONE_ID: Z0207681C1IURS8JA2J5
    RTC_START_PORT: "40000"
    RTC_END_PORT: "40099"
    RTC_PORT_BLOCK_SIZE: "100"
    GAMESERVER_DOMAIN: gameserver-dev.xrengine.info
    GAMESERVER_PORT: "3031"
    STORAGE_PROVIDER: aws
    STORAGE_AWS_ACCESS_KEY_ID: AKIAXU7DD3PIVGEOX2QL
    STORAGE_AWS_ACCESS_KEY_SECRET: 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
    STORAGE_CLOUDFRONT_DOMAIN: resources.xrengine.info
    STORAGE_CLOUDFRONT_DISTRIBUTION_ID: E2PNTMP91HI24O
    STORAGE_S3_REGION: us-east-1
    STORAGE_S3_STATIC_RESOURCE_BUCKET: xrengineinfo-static-resources
    CERT: certs/cert.pem
    KEY: certs/key.pem
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/enable-cors: "false"
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/affinity-mode: persistent
      nginx.ingress.kubernetes.io/server-snippet: |
        location ~* /socket.io/([a-zA-Z0-9\.]*)/([a-zA-Z0-9\.]*)/?$ {
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_pass http://$1:$2/socket.io/?$args;
        }
    host: gameserver-dev.xrengine.info
  resources:
    limits:
      cpu: "2"
    requests:
      cpu: "1.5"
  buffer:
    bufferSize: 2
    minReplicas: 4
    maxReplicas: 24
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-gameservers-1

editor:
  enabled: false
  extraEnv:
    BASE_ASSETS_PATH: https://api-dev.xrengine.info/
    CORS_PROXY_SERVER: ""
    GA_TRACKING_ID: ""
    HUBS_SERVER: api-dev.xrengine.info
    IS_MOZ: "false"
    NON_CORS_PROXY_DOMAINS: ""
    RETICULUM_SERVER: api-dev.xrengine.info
    SENTRY_DSN: ""
    THUMBNAIL_SERVER: ""
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-1
  ingress:
    hosts:
      - host: dev.xrengine.info
        paths:
          - /create
redis:
  enabled: false

analytics:
  enabled: false
  name: xrengine-analytics
  replicaCount: 1
  image:
    repository: public.ecr.aws/t9b0o2y9/xrengine-dev
    pullPolicy: IfNotPresent
  extraEnv:
    ANALYTICS_ENABLED: "true"
    ANALYTICS_PORT: "3030"
    ANALYTICS_PROCESS_INTERVAL: "10000"
    AUTH_SECRET: <SAME_AUTH_SECRET_AS_IN_API>
    STORAGE_S3_REGION: us-east-1
    STORAGE_S3_STATIC_RESOURCE_BUCKET: xrengineinfo-static-resources
    STORAGE_S3_AVATAR_DIRECTORY: avatars


  service:
    type: ClusterIP
    port: 3030

  serviceAccount:
    create: true
    annotations: {}
    name:

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                  - ng-1
